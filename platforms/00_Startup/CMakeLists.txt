cmake_minimum_required(VERSION 3.13)
project(BareMetal00_Startup C)
enable_language(ASM)

set(STARTUP_ASM)
set(LDSCRIPT)
if (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
  set(STARTUP_ASM src/crt0_x86_64.S)
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "aarch64")
  if (${CMAKE_SYSTEM_NAME} STREQUAL "Generic")
    set(STARTUP_ASM src/startup_a64.S)
    set(LDSCRIPT    src/ldscript_a64.lds)
  elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    set(STARTUP_ASM src/crt0_a64.S)
  endif()
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm")
  if (${CMAKE_SYSTEM_NAME} STREQUAL "Generic")
    set(STARTUP_ASM src/startup_a32.S)
    set(LDSCRIPT    src/ldscript_a32.lds)
  elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    set(STARTUP_ASM src/crt0_a32.S)
  endif()
endif()

add_library(lib00_Startup OBJECT ${STARTUP_ASM} src/startup.c)
target_compile_options(lib00_Startup
  PRIVATE $<$<COMPILE_LANG_AND_ID:C,GNU>:-fno-tree-loop-distribute-patterns>
  PRIVATE $<$<COMPILE_LANG_AND_ID:C,Clang>:-fno-builtin>)
if(COMMAND target_compile_option_warning)
  target_compile_option_warning(lib00_Startup)
endif()

add_executable(00_Startup test/main.c)
if (TARGET 00_Startup)
  if(COMMAND target_compile_option_warning)
    target_compile_option_warning(00_Startup)
  endif()
  target_link_libraries(00_Startup
    PRIVATE lib00_Startup)
  if(COMMAND target_link_option_baremetal)
    target_link_option_baremetal(00_Startup ${BareMetal00_Startup_SOURCE_DIR}/${LDSCRIPT})
  endif()
endif()
