cmake_minimum_required(VERSION 3.13)
project(BM00_Startup C)
enable_language(ASM)

set(STARTUP_ASM)
set(STARTUP_C)
set(STARTUP_FLAGS)
set(LDSCRIPT)
if (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
  set(STARTUP_ASM   src/crt0_x86_64.S)
  set(STARTUP_FLAGS BM_LINUX)
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "aarch64")
  if (${CMAKE_SYSTEM_NAME} STREQUAL "Generic")
    set(STARTUP_ASM   src/startup_a64.S)
    set(STARTUP_C     src/startup_a64_c.c)
    set(LDSCRIPT      src/ldscript_a64.ld.S)
    set(STARTUP_FLAGS BM_BAREMETAL)
  elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    set(STARTUP_ASM   src/crt0_a64.S)
    set(STARTUP_FLAGS BM_LINUX)
  endif()
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm")
  if (${CMAKE_SYSTEM_NAME} STREQUAL "Generic")
    set(STARTUP_ASM   src/startup_a32.S)
    set(STARTUP_C     src/startup_a32_c.c)
    set(LDSCRIPT      src/ldscript_a32.ld.S)
    set(STARTUP_FLAGS BM_BAREMETAL)
  elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    set(STARTUP_ASM   src/crt0_a32.S)
    set(STARTUP_FLAGS BM_LINUX)
  endif()
endif()

add_library(00_Startup OBJECT ${STARTUP_ASM} ${STARTUP_C} src/startup.c)
target_compile_options(00_Startup
  PRIVATE $<$<COMPILE_LANG_AND_ID:C,GNU>:-fno-tree-loop-distribute-patterns>
  PRIVATE $<$<COMPILE_LANG_AND_ID:C,Clang>:-fno-builtin>)
target_compile_definitions(00_Startup
  PUBLIC  ${STARTUP_FLAGS})
if(COMMAND target_compile_option_warning)
  target_compile_option_warning(00_Startup)
endif()

add_executable(00_StartupTest test/main.c)
if (TARGET 00_StartupTest)
  if(COMMAND target_compile_option_warning)
    target_compile_option_warning(00_StartupTest)
  endif()
  target_compile_options(00_StartupTest
    PRIVATE $<$<COMPILE_LANG_AND_ID:C,GNU>:-fno-tree-loop-distribute-patterns>
    PRIVATE $<$<COMPILE_LANG_AND_ID:C,Clang>:-fno-builtin>)
  target_link_libraries(00_StartupTest
    PRIVATE 00_Startup)
  if(COMMAND target_link_option_baremetal)
    target_link_option_baremetal(00_StartupTest ${BM00_Startup_SOURCE_DIR}/${LDSCRIPT})
  endif()
endif()
